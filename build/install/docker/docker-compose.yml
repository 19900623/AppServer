version: "3.4"

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  mysql:
    image: mysql:8.0.18 
    container_name: mysql
    hostname: ${MYSQL_HOST}
    restart: always
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./config/mysql/conf.d:/etc/mysql/conf.d
      - ../../../sql:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
      - mysql_log:/var/log/mysql:rw
      - mysql_error:/var/log/mysql/error.log:rw

  api:
    build:
      context: .
      target: api
    container_name: api
    hostname: api
    restart: always
    depends_on:
      - mysql
    expose:
      - ${SERVICE_PORT}
    volumes:
      - app_data:/app/onlyoffice/data/
      - app_log:/var/log/supervisor/    

  api_system:
    build:
      context: .
      target: api_system
    image: api_system
    container_name: api_system
    hostname: api_system 
    restart: always
    depends_on:
    - mysql
    expose:
    - ${SERVICE_PORT}
    volumes:
    - app_data:/app/onlyoffice/data/
    - app_log:/var/log/supervisor/

  urlshortener:
    build:
      context: .
      target: urlshortener
    image: urlshortener
    container_name: urlshortener
    hostname: urlshortener 
    restart: always
    depends_on:
    - mysql
    expose:
    - ${SERVICE_PORT}
    volumes:
    - app_data:/app/onlyoffice/data/
    - app_log:/var/log/supervisor/

  studio.notify:
    build:
      context: .
      target: studio.notify
    image: studio.notify
    container_name: studio.notify
    hostname: studio_notify
    restart: always
    depends_on:
    - mysql
    expose:
    - ${SERVICE_PORT}
    volumes:
    - app_data:/app/onlyoffice/data/
    - app_log:/var/log/supervisor/


  people.server:
    build:
      context: .
      target: people.server  
    container_name: people.server
    hostname: people_server
    restart: always
    depends_on:
    - mysql
    expose:
      - ${SERVICE_PORT}
    volumes:
      - app_data:/app/onlyoffice/data/
      - app_log:/var/log/supervisor/

  files:
    build:
      context: .
      target: files  
    container_name: files
    hostname: files
    restart: always
    depends_on:
    - mysql
    expose:
      - ${SERVICE_PORT}
    volumes:
      - app_data:/app/onlyoffice/data/
      - app_log:/var/log/supervisor/

  files_services:
    build:
      context: .
      target: files_services  
    container_name: files_services
    hostname: files_services
    restart: always
    depends_on:
    - mysql
    expose:
      - ${SERVICE_PORT}
    volumes:
      - app_data:/app/onlyoffice/data/
      - app_log:/var/log/supervisor/

  studio:
    build:
      context: .
      target: studio
    image: studio
    container_name: studio
    hostname: studio
    restart: always
    depends_on:
    - mysql
    expose:
    - ${SERVICE_PORT}
    volumes:
    - app_data:/app/onlyoffice/data/
    - app_log:/var/log/supervisor/   
      
  nginx:
    build:
      context: .
      target: web
    container_name: nginx
    hostname: nginx
    restart: always
    ports:
      - 8092:8092 
      - 8081:8081
    depends_on:
      - api
      - api_system
      - urlshortener
      - studio.notify
      - people.server
      - files
      - files_services
      - studio
      - mysql
    environment:
      - SERVICE_API="api:${SERVICE_PORT}"
      - SERVICE_API_SYSTEM="api_system:${SERVICE_PORT}"
      - SERVICE_URLSHORYENER="urlshortener:${SERVICE_PORT}"
      - SERVICE_STUDIO_NOTIFY="studio.notify:${SERVICE_PORT}"
      - SERVICE_PEOPLE_SERVER="people.server:${SERVICE_PORT}"
      - SERVICE_FILES="files:${SERVICE_PORT}"
      - SERVICE_FILES_SERVICES="files_services:${SERVICE_PORT}"
      - SERVICE_STUDIO="studio:${SERVICE_PORT}"
      - SERVICE_PORT=${SERVICE_PORT}

    volumes:
      - ./config/nginx/templates/upstream.conf.template:/etc/nginx/templates/upstream.conf.template
      - nginx_log:/var/log/nginx

volumes:
  mysql_data:
  mysql_log:
  mysql_error:
  nginx_log:
  app_data:
  app_log:
  es_data: